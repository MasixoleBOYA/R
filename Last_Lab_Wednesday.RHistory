data <- read.csv("C:/Users/STAFF/Desktop/Data Science/Viz/Minerals.csv")
library(ggplot2)
ggplot(data)+geom_col(aes(x=prod_size,y=latitude))
q()
head(data)
class(data)
view(data)
View(data)
dim(data)
names(data)
data$site_name
unique(data$site_name)
unique(data$site_name)
head(unique(data$site_name))
head(unique(data$site_name))
dim(unique(data$site_name))
length(unique(data$site_name))
names(data)
length(unique(data$com_type))
unique(data$com_type)
as.numeric(data$com_type)
data <- data[!is.na(data$com_type),]
dim(data)
as.numeric(data$com_type)
data <- data[!is.na(data$com_type),]
data <- data[!is.na(data$com_type),]
# Remove rows with NAs in the 'com_type' column
data <- data[!is.na(data$com_type), ]
data <- data[!is.na(data$com_type), ]
dim(data)
data <-# Remove rows with missing values from the dataframe
cleaned_data <- na.omit(data)
data <- na.omit(data)
dim(data)
head(data$com_type)
unique(data$com_type)
View(data)
dim(data)
df <- na.omit(data)
dim(df)
dim(cleaned_data)
View(df)
View(df)
View(cleaned_data)
new_data <-na.omit(df[,])
new_data <-na.omit(df[,])
dim(new_data)
q()
names(df)
length(names(df))
dim(df)
df <- na.omit(df)
df <- na.omit(df)
dim(df)
plot(df)
plot(df$site_name,df$ore)
View(df)
dataFrame <- read.csv("C:\Users\STAFF\Downloads\archive (10)\water_potability.csv")
da<-read.csv("C:\Users\STAFF\Downloads\archive (10)\water_potability.csv")
da<-read.csv("C:/Users/STAFF/Downloads/archive (10)/water_potability.csv")
class(da)
dim(da)
dataFrame <- na.omit(da)
dim(dataFrame)
View(dataFrame)
plot(dataFrame)
names(dataFrame)
plot(dataFrame$ph,dataFrame$Conductivity)
plot(dataFrame$ph,dataFrame$Potability)
plot(dataFrame$Sulfate,dataFrame$Conductivity)
plot(dataFrame$Solids,dataFrame$Turbidity)
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'p')
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'l')
plot(dataFrame$Solids,dataFrame$Turbidity, type= 's')
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'p',lwd=3)
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'p',lwd=3, col= 'red')
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'p',lwd=3, col= 'red',xlab= "Solids,ylab="Turbidity", main='Turbidity vs Solids dissolved in the water')
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'p',lwd=3, col= 'red',xlab= "Solids",ylab="Turbidity", main='Turbidity vs Solids dissolved in the water')
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'p',lwd=1, col= 'red',xlab= "Solids",ylab="Turbidity", main='Turbidity vs Solids dissolved in the water')
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'p',lwd=1, col= 'red',xlab= "Solids",ylab="Turbidity", main='Turbidity vs Solids dissolved in the water',pch=16,cex=as.numeric(dataFrame$Potability)
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'p',lwd=1, col= 'red',xlab= "Solids",ylab="Turbidity", main='Turbidity vs Solids dissolved in the water',pch=16,cex=as.numeric(dataFrame$Potability))
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'p',lwd=1, col= 'red',xlab= "Solids",ylab="Turbidity", main='Turbidity vs Solids dissolved in the water',pch=16,cex=as.numeric(dataFrame$Potability))
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'p',lwd=1, col= 'red',xlab= "Solids",ylab="Turbidity", main='Turbidity vs Solids dissolved in the water',pch=16,cex=as.numeric(dataFrame$Potability)+2)
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'p',lwd=1, col= 'red',xlab= "Solids",ylab="Turbidity", main='Turbidity vs Solids dissolved in the water',pch=16,cex=as.numeric(dataFrame$Potability)+2)
colors <- c("red","blue")
plot(dataFrame$Solids,dataFrame$Turbidity, type= 'p',lwd=1, col= colors[dataFrame$Potability+1],xlab= "Solids",ylab="Turbidity", main='Turbidity vs Solids dissolved in the water',pch=16,cex=as.numeric(dataFrame$Potability)+2)
hist(dataFrame$Organic_carbon)
hist(dataFrame$Organic_carbon,col="red",lwd=3)
png("histogram of orgarnic carbon.png")
dev.off()
png("histogram of orgarnic carbon.png")
hist(dataFrame$Organic_carbon,col="red",lwd=3)
dev.off()
getwd()
q()
names(dataFrame)
?plot
library(ggplot2)
load(ggplot2)
load(ggplot)
library(ggplot2)
?plot
plot(ph,Organic_carbon)
plot(dataFrame$ph,dataFrame$Organic_carbon)
pH <- dataFrame$ph
Organic_carbon <- dataFrame$Organic_carbon
plot(pH,Organic_carbon)
plot(dataFrame$ph,dataFrame$Organic_carbon, ylab= "Organic Carbon",xlab= "pH(acidity")
plot(dataFrame$ph,dataFrame$Organic_carbon, ylab= "Organic Carbon",xlab= "pH(acidity)")
library(ggplot2)
?ggplot
ggplot(data = dataFrame)
ggplot(data = dataFrame) +geom_point(mapping = aes(x = dataFrame$ph,y= dataFrame$Solids))
?pivot_longer
library(tidyr)
install.packages("tidyr")
library(tidyr)
?pivot_longer
?lm
summary(lm.D9)
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
lm.D90 <- lm(weight ~ group - 1) # omitting intercept
summary(lm.D9)
geom_sf
q()
df <- read.csv("C:\Users\STAFF\Desktop\Data Science\Viz\le_gdp_world.csv dataset")
df <- read.csv("C:/Users/STAFF/Desktop/Data Science/Viz/le_gdp_world.csv dataset")
bdf <- read.csv("C:/Users/STAFF/Desktop/Data Science/Viz/le_gdp_world.csv")
df <- read.csv("C:/Users/STAFF/Desktop/Data Science/Viz/le_gdp_world.csv dataset.csv")
names(df)
dim(df)
library(ggplot2)
class(df$X)
plot(df$name.x,df$Income.per.person)
dF <- na.omit(df)
dim(dF)
class(df)
View(df)
install.packages('sf')
library(sf)
saps_precinct <- read_sf('C:/Users/STAFF/Desktop/Data Science/Viz/SAPS police precincts.gpkg.gpkg")
plot(saps_precint)
plot(saps_precint)
saps_precinct <- read_sf("C:/Users/STAFF/Desktop/Data Science/Viz/SAPS police precincts.gpkg.gpkg")
dim(saps_precinct)
saps_precinct <- read_sf('C:/Users/STAFF/Desktop/Data Science/Viz/SAPS police precincts.gpkg.gpkg')
saps_precinct <- read_sf('C:/Users/STAFF/Desktop/Data Science/Viz/SAPS police precincts.gpkg.gpkg')
saps_precinct <- read_sf('C:/Users/STAFF/Desktop/Data Science/Viz/SAPS police precincts.gpkg.gpkg')
saps_precinct <- read_sf('C:/Users/STAFF/Desktop/Data Science/Viz/SAPS_police_precincts.gpkg')
plot(saps_precinct)
plot(saps_precinct[,COMPNT_NM])
plot(saps_precinct[,"COMPNT_NM"])
plot(saps_precinct[saps_precint$COMPNT_NM== "SOPHIA TOWN","COMPNT_NM"])
plot(saps_precinct[saps_precinct$COMPNT_NM== "SOPHIA TOWN","COMPNT_NM"])
install.packages("viridis")
library(viridis)
as.numeric(rownames(saps_precinct)) -> saps_precinct$rownumber
plot(saps_precinct['rownumber],breaks = seq(1,dim(saps_precinct)[1],10),pal =viridis(116,option = "magma"))
plot(saps_precinct['rownumber'],breaks = seq(1,dim(saps_precinct)[1],10),pal =viridis(116,option = "magma"))
plot(saps_precinct[,'rownumber'],breaks = seq(1,dim(saps_precinct)[1],10),pal =viridis(116,option = "magma"))
plot(saps_precinct[,'rownumber'],breaks = seq(1,dim(saps_precinct)[1],10),pal =viridis(116,option = "plasma"))
savehistory("QGIS_TO_R.Rhistory")
q()
data <- read.csv("C:/Users/STAFF/Desktop/Data Science/Viz/le_gdp_world.csv.csv")
names(data)
class(data)
View(data)
plot(data)
library(ggplot2)
ggplot(data=data, mapping = aes(x=GDP.per.capita.growth....,y=Income.per.person))+geom_point()
plot(data)
ggplot(data=data, mapping = aes(x=GDP.per.capita.growth....,y=Income.per.person))+geom_point()+geom_smooth(method= 'lm')
lm_model <- lm(Income.per.person ~ GDP.per.capita.growth, data = dataset)
lm_model <- lm(Income.per.person ~ GDP.per.capita.growth, data = data)
lm_model <- lm(Income.per.person ~ GDP.per.capita.growth...., data = data)
summary(lm_model)
lm_model <- lm(Income.per.person ~ Life.expectancy, data = data)
summary(lm_model)
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point()+geom_smooth(method= 'lm')
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(size = name.x)+geom_smooth(method= 'lm')
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = name.x))+geom_smooth(method= 'lm')
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = GDP.total))+geom_smooth(method= 'lm')
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = GDP.total, shape= name.x))+geom_smooth(method= 'lm')
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = GDP.total, color= name.x))+geom_smooth(method= 'lm')
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = GDP.total, color= name.x))+geom_smooth(method= 'lm')+guides(color= "none")
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = GDP.total, color= name.x))+geom_smooth(method= 'lm')+guides(color= "none")+labs(x="Income per person",y="Life expectancy (in years)")+ggtitle("The change in life expectancy relative to the income per person")
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = GDP.total, color= name.x,stroke= 1))+geom_smooth(method= 'lm')+guides(color= "none")+labs(x="Income per person",y="Life expectancy (in years)")+ggtitle("The change in life expectancy relative to the income per person")
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = GDP.total, color= name.x,stroke= 10))+geom_smooth(method= 'lm')+guides(color= "none")+labs(x="Income per person",y="Life expectancy (in years)")+ggtitle("The change in life expectancy relative to the income per person")
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = GDP.total, color= name.x),stroke =1)+geom_smooth(method= 'lm')+guides(color= "none")+labs(x="Income per person",y="Life expectancy (in years)")+ggtitle("The change in life expectancy relative to the income per person")
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = GDP.total, color= name.x),color="black",stroke =1)+geom_smooth(method= 'lm')+guides(color= "none")+labs(x="Income per person",y="Life expectancy (in years)")+ggtitle("The change in life expectancy relative to the income per person")
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = GDP.total, color= name.x),stroke =1)+geom_smooth(method= 'lm')+guides(color= "none")+labs(x="Income per person",y="Life expectancy (in years)")+ggtitle("The change in life expectancy relative to the income per person")
ggsave("Income_VS_Life_Expectancy",plot = p)
ggsave("Income_VS_Life_Expectancy.png",plot = p)
ggsave("Income_VS_Life_Expectancy.png")
savehistory(file="ggplot_1869204.RHistory")
q()
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = GDP.total, color= name.x),stroke =1)+geom_smooth(method= 'lm')+guides(color= "none")+labs(x="Income per person",y="Life expectancy (in years)")+ggtitle("The change in life expectancy relative to the income per person")
library(ggplot2)
ggplot(data=data, mapping = aes(x=Income.per.person,y=Life.expectancy))+geom_point(aes(size = GDP.total, color= name.x),stroke =1)+geom_smooth(method= 'lm')+guides(color= "none")+labs(x="Income per person",y="Life expectancy (in years)")+ggtitle("The change in life expectancy relative to the income per person")
class(data$Income.per.person)
log(10000)
log10(10000)
new_income <- log10(data$Income.per.person)
ggplot(data=data, mapping = aes(x=new_income,y=Life.expectancy))+geom_point(aes(size = GDP.total, color= name.x),stroke =1)+geom_smooth(method= 'lm')+guides(color= "none")+labs(x="Income per person",y="Life expectancy (in years)")+ggtitle("The change in life expectancy relative to the income per person")
ggplot(data=data, mapping = aes(x=new_income,y=Life.expectancy))+geom_point(aes(size = GDP.total, color= name.x),stroke =1)+geom_smooth(method= 'lm')+guides(color= "none")+labs(x="Log10(Income per person)",y="Life expectancy (in years)")+ggtitle("The change in life expectancy relative to the income per person")
as.data.frame(x=rep(1:3,10))
df <- as.data.frame(x=rep(1:3,10))
df
View(df)
x ->names(df)
names(df) -> "x"
View(df)
names(df)
df$rep(1:3, 10) <- "x"
rep(c("yes","no","neither"),10)->df$F
View(df)
df$F
View(df)
names(df[1]) <- "x"
View(df)
names(df)[1] <- "x"
table(df$F)
View(df)
fix(df)
table(df$F)
class(df$F)
df$F <- as.factor(df$F) 
class(df$F)
levels(df$F)
plot(df$F)
levels(df$F)[c(3,1,2)]
levels(df$F)
levels(df$F)[c(3,1,2)]
plot(factor(df$F,levels = c("no","neither","yes")))
plot(factor(df$F, levels = levels(df$F)[c(3,2,1)]))
savehistory(file = "Last_Lab_Wednesday.RHistory")
